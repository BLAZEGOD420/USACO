/*
ID: howieen1
TASK: stamps
LANG: C++
*/
#include <iostream>
#include <fstream>
#include <string>
#include <algorithm>
using namespace std;
int main() {
	ifstream fin ("stamps.in");
	ofstream fout ("stamps.out");
	int K, N;
	fin >> K >> N;
	int stamps[N];
	for (int i = 0; i < N; i++) {
		fin >> stamps[i];
	}
	sort(stamps, stamps + N);
	int dp[stamps[N - 1] * K + 1];
	dp[0] = 0;
	for (int i = 1; i < stamps[N - 1] * K + 1; i++){
		dp[i] = 10000;
	}
	for (int i = 0; i < N; i++) {
		dp[stamps[i]] = 1;
	}
	int current = 1;
	while (current < stamps[N - 1] * K + 1) {
		for (int i = 0; i < N; i++) {
			if (dp[current] > 1 + dp[current - stamps[i]] && stamps[i] < current) {
				dp[current] = 1 + dp[current - stamps[i]];
			}
		}
		if (dp[current] > K) {
			break;
		}
		current += 1;
	}
	fout << current - 1 << endl;
	return 0;
}